name: Build
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            args: ""
            targets: ""
            label: linux
            executable: target/release/botwrdb
          - os: macos-latest
            args: "--target aarch64-apple-darwin"
            targets: aarch64-apple-darwin
            label: macos-aarch64
            executable: target/aarch64-apple-darwin/release/botwrdb
          - os: macos-latest
            args: "--target x86_64-apple-darwin"
            targets: x86_64-apple-darwin
            label: macos-x86_64
            executable: target/x86_64-apple-darwin/release/botwrdb
          - os: windows-latest
            args: ""
            targets: ""
            label: windows
            executable: target/release/botwrdb.exe
    name: Tauri (${{ matrix.label }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: arduino/setup-task@v2
        with:
          version: 3.x
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.targets }}
      - uses: Swatinem/rust-cache@v2
      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - run: task rdb:install-ci
      - run: "task rdb:build -- --ci ${{ matrix.args }}"
      - uses: actions/upload-artifact@v4
        with:
          path: ${{ matrix.executable }}
          name: botwrdb-${{ matrix.label }}
          retention-days: 30

